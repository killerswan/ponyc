language: c

branches:
  only:
    - deps

dist: trusty
sudo: required

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - LLVM_VERSION="3.9.1"
        - LLVM_CONFIG="llvm-config-3.9"
        - config=debug
        - CC1=gcc-5
        - CXX1=g++-5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - LLVM_VERSION="3.9.1"
        - LLVM_CONFIG="llvm-config-3.9"
        - config=release
        - CC1=gcc-5
        - CXX1=g++-5

rvm:
  - 2.2.3

install:
  # For a master or release release build with the latest stable LLVM,
  # prepare to deploy artifacts.
  - if [[
        "$TRAVIS_REPO_SLUG" == "killerswan/ponyc" &&
        "$LLVM_VERSION" == "3.9.1" &&
        "$config" == "release" &&
        "$TRAVIS_OS_NAME" == "linux" &&
        "$TRAVIS_PULL_REQUEST" == "false"
    ]];
    then
        if [[ "$TRAVIS_BRANCH" == "master" || "$TRAVIS_BRANCH" == "release" || "$TRAVIS_BRANCH" == "deps" ]];
        then
            export CREATE_PACKAGES=yes;

            sudo apt-get install -y rpm;
            rvm use 2.2.3 --default;
            gem install fpm;
        fi;
    fi;

  - if [ "${TRAVIS_OS_NAME}" = "linux" ];
    then
      if [ "${LLVM_VERSION}" = "3.6.2" ];
      then
        wget "http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz";
      else
        wget "http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-debian8.tar.xz";
      fi;
      tar -xvf clang+llvm*;
      cd clang+llvm* && sudo mkdir /tmp/llvm && sudo cp -r * /tmp/llvm/;
      sudo ln -s /tmp/llvm/bin/llvm-config /usr/local/bin/${LLVM_CONFIG};
      cd -;
      wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre2-10.21.tar.bz2;
      tar -xjvf pcre2-10.21.tar.bz2;
      cd pcre2-10.21 && ./configure --prefix=/usr && make && sudo make install;
      cd -;
    fi;
  - if [ "${TRAVIS_OS_NAME}" = "osx" ];
    then
      brew update;
      brew install gmp; brew link --overwrite gmp;
      if [ "${LLVM_VERSION}" = "3.7.1" ];
      then
        brew install llvm37;
      fi;
      if [ "${LLVM_VERSION}" = "3.8.1" ];
      then
        brew install llvm38;
      fi;
      if [ "${LLVM_VERSION}" = "3.9.1" ];
      then
        brew install llvm;
        brew link --overwrite --force llvm;
        mkdir llvmsym;
        ln -s `which llvm-config` llvmsym/llvm-config-3.9;
        ln -s `which clang++` llvmsym/clang++-3.9;
        export PATH=llvmsym/:$PATH;
      fi;
      brew install pcre2 libressl;
    fi;

script:
  - make CC=$CC1 CXX=$CXX1 test-ci

notifications:
  email:
    on_success: always
    on_failure: always
    recipients:
    - kevincantu@gmail.com

after_success:
  # If successful, set $UPLOAD to "yes".
  #
  # The PACKAGE_ITERATION will be fed to the DEB and RPM systems by FPM
  # as a suffix to the base version (DEB:debian_revision or RPM:release,
  # used to disambiguate packages with the same version).
  #
  # PACKAGE_NAME and PACKAGE_CONFLICTS are used (by FPM) to create mutually exclusive packages
  # like "ponyc-master" and "ponyc-release".
  - if [[ "$CREATE_PACKAGES" == "yes" ]];
    then
      if [[ "$TRAVIS_BRANCH" == "release" || "$TRAVIS_BRANCH" == "deps" ]];
      then
          PACKAGE_NAME="ponyc-release";
          PACKAGE_CONFLICTS="ponyc-master";
      else
          PACKAGE_NAME="ponyc-$TRAVIS_BRANCH";
          PACKAGE_CONFLICTS="ponyc-release";
      fi;
      PACKAGE_ITERATION="${PACKAGE_ITERATION}${TRAVIS_BUILD_NUMBER}.`git rev-parse --short --verify HEAD^{commit}`";
      make verbose=1 arch= config=release package_name="$PACKAGE_NAME" package_conflicts="$PACKAGE_CONFLICTS" package_base_version="`cat VERSION`" package_iteration="$PACKAGE_ITERATION" deploy && export UPLOAD=yes;
    fi;

deploy:
  - provider: bintray
    user: killerswan
    file: /home/travis/build/killerswan/ponyc/bintray_rpm.yml
    on:
      branch: deps
      condition: "$UPLOAD = yes"
    key:
      secure: "U8Klkg0uZRFR1A+8gVVmAhqGwlzbJcax8KIYQDHJv9qoV6oBtl01jyBjZTRG8FNVef7U6HKHGqJSoaY4ByGgPv79YlGFzpn2lZL550E0YFmpfYea6CPUqzkcVU/3FY30MlbYckUceZc4Eei68Ekm2CvN1bmktDz8r/NWHhAeMYAHIihLFulmlwm4zxDbTkHNtNW4rKjyCTAtbSP4yTyOCnQBo6wMor54IxJ/8al0fCy1IW4q3DdQaEjkUBmBigY1sya6tEhKr7IFoeabRZiiccYWv6T7LmSe72Nug6X2CWBrGLLk7+vANYfQy0O040fEWUFAuuc6G7mb5NTCcbE1BhH0VBpqxI7dkgnPpPVgogDqQ0y06PKfEJ69+8+F78DS/TLZTKrCL3nf7V5VLLUcRswSxJB2hAHwNtn1SH1pwY8zP5CUVlIVDVVObbpAB87shsKoWO/k4x8T6kWRKPy9IVO8kp5VaDJ4cBfew1COXbhQwRxiAzDnSzrarsGFJ7mM8wTv6nw0lxJg3p5eJND3U0JxKKz/D6wpEL7KtU2ltru8QXo7jzWB4mrv0K3uXFBhXLPOI83kwwhCdfLKqCL8m7rb1Ta3Ag3cO0AKmFj6ZIsX2dCN9k/W/DmOOxaWR+vkVQTxdaM9e2+QywmgPsiKyHx3Cd5e8Ao24/xict0tSGQ="
